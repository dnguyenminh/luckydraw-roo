plugins {
    id 'java'
    id 'java-library'
    id 'io.spring.dependency-management'
}

dependencies {
    api 'org.springframework.boot:spring-boot-starter-data-jpa'
    api 'jakarta.persistence:jakarta.persistence-api'
    api 'jakarta.validation:jakarta.validation-api'

    implementation 'org.postgresql:postgresql'
    implementation 'org.hibernate.orm:hibernate-core'
    implementation 'com.fasterxml.jackson.core:jackson-annotations'

    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    testCompileOnly 'org.projectlombok:lombok'
    testAnnotationProcessor 'org.projectlombok:lombok'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'com.h2database:h2'
    testImplementation 'org.junit.jupiter:junit-jupiter:5.9.2'
    testImplementation 'org.assertj:assertj-core'
    testImplementation 'org.mockito:mockito-core'
    testImplementation 'com.fasterxml.jackson.core:jackson-databind'

    testImplementation 'org.junit.jupiter:junit-jupiter-api'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    testRuntimeOnly 'org.junit.platform:junit-platform-commons'
}

test {
    useJUnitPlatform()
}

java {
    sourceCompatibility = JavaVersion.VERSION_21
    targetCompatibility = JavaVersion.VERSION_21
    withJavadocJar()
    withSourcesJar()
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}

jar {
    enabled = true
    archiveClassifier = ''
}
