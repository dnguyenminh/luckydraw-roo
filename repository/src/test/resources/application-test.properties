# Test database configuration - using H2 in-memory database for parallel testing
spring.datasource.url=jdbc:h2:mem:testdb;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE;MODE=PostgreSQL
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect

# Hibernate properties - use create-drop for tests to ensure clean state
spring.jpa.hibernate.ddl-auto=create

# For tests, use our schema script but disable default data script loading
# We'll manage test data manually through DatabaseCleanupUtil
spring.sql.init.mode=embedded
spring.jpa.defer-datasource-initialization=true
spring.sql.init.schema-locations=classpath:schema-h2.sql
# Disable automatic data loading, we'll handle this in our test setup
spring.sql.init.data-locations=

# Disable Flyway for tests
spring.flyway.enabled=false

# Transaction settings
spring.transaction.default-timeout=30
spring.transaction.rollback-on-commit-failure=true

# Debug settings
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE
logging.level.org.springframework.transaction=DEBUG
logging.level.org.springframework.jdbc=DEBUG
logging.level.org.h2=DEBUG
logging.level.org.springframework.test=DEBUG

# H2 Console (useful for debugging)
spring.h2.console.enabled=true

# Additional H2 settings for PostgreSQL compatibility
spring.jpa.properties.hibernate.globally_quoted_identifiers=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.H2Dialect

# Enable this to see exactly what SQL is being executed
# spring.jpa.properties.hibernate.show_sql=true
# spring.jpa.properties.hibernate.format_sql=true
